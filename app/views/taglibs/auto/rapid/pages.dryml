<!-- AUTOMATICALLY GENERATED FILE - DO NOT EDIT -->

<!-- ====== Main Navigation ====== -->

<def tag="main-nav">
  <navigation class="main-nav" merge-attrs param="default">
    <nav-item href="#{base_url}/">Home</nav-item>
    <nav-item with="&Program"><ht key="program.nav_item" count="100"><model-name-human count="100"/></ht></nav-item>
  </navigation>
</def>




<!-- ====== Area Pages ====== -->

<def tag="index-page" for="Area">
  <page merge title="#{ht 'area.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page area" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="area.index.heading">
            <model-name-human model="&model"/>
          </ht>
        </h2>

        <p param="count" if>
          <ht key="area.collection.count" count="&collection_count">
            <count summary/>
          </ht>
        </p>
      </header>

      <section param="content-body">
        <a action="new" to="&model" param="new-link">
          <ht key="area.actions.new">New Area</ht>
        </a>

        <page-nav param="top-page-nav"/>

        <collection param/>

        <page-nav param="bottom-page-nav"/>


      </section>
    </content:>
  </page>
</def>


<def tag="new-page" for="Area">
  <page merge title="#{ht 'area.new.title', :default=>[' New Area'] }">
    <body: class="new-page area" param/>

    <content: param>
      <section param="content-header">
        <h2 param="heading">
          <ht key="area.new.heading">
            New Area
          </ht>
        </h2>
      </section>

      <section param="content-body">
        <form param>
          <submit: label="#{ht 'area.actions.create', :default=>['Create Area']}"/>
        </form>
      </section>
    </content:>
  </page>
</def>


<def tag="show-page" for="Area">
  <page merge title="#{ht 'area.show.title', :default=>['Area'] }">

    <body: class="show-page area" param/>

    <content: param>
      <section-group>
        <section param="main-content">
          <header param="content-header">
            <a:chapter param="parent-link">&laquo; <ht key="area.actions.back_to_parent" parent="Chapter" name="&this">Back to <name/></ht></a:chapter>
            <h2 param="heading">
              <ht key="area.show.heading" name="&this.respond_to?(:name) ? this.name : ''">
                <name/>
              </ht>
            </h2>

            <record-flags fields="" param/>

            <a action="edit" if="&can_edit?" param="edit-link">
              <ht key="area.actions.edit" name="&this.respond_to?(:name) ? this.name : ''">
                Edit Area
              </ht>
            </a>
          </header>

          <section param="content-body">
            <field-list fields="language, position" param/>
            <section param="collection-section">
              <h3 param="collection-heading">
                <ht key="finding.collection.heading" count="&this.findings.count" >
                  <human-collection-name collection="findings" your/>
                </ht>
              </h3>

              <collection:findings param/>
            </section>
          </section>
        </section>

        <aside param>
          <section param="uploads-collection-section">
            <h3 param="uploads-collection-heading">
              <ht key="upload.collection.heading" count="&this.uploads.count" >
                <human-collection-name collection="uploads" your/>
              </ht>
            </h3>
            <collection:uploads  param="uploads-collection"/>
          </section>
        </aside>
      </section-group>
    </content:>

  </page>
</def>


<def tag="edit-page" for="Area">
  <page merge title="#{ht 'area.edit.title', :default=>['Edit Area'] }">

    <body: class="edit-page area" param/>

    <content:>
      <section param="content-header">
        <h2 param="heading">
          <ht key="area.edit.heading" name="&this.respond_to?(:name) ? this.name : ''">
            Edit Area
          </ht>
        </h2>
        <delete-button label="#{ht 'area.actions.delete', :default=>['Remove This Area']}" param/>
      </section>

      <section param="content-body">
        <form param/>
      </section>
    </content:>

  </page>
</def>





<!-- ====== Chapter Pages ====== -->

<def tag="index-page" for="Chapter">
  <page merge title="#{ht 'chapter.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page chapter" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="chapter.index.heading">
            <model-name-human model="&model"/>
          </ht>
        </h2>

        <p param="count" if>
          <ht key="chapter.collection.count" count="&collection_count">
            <count summary/>
          </ht>
        </p>
      </header>

      <section param="content-body">
        <a action="new" to="&model" param="new-link">
          <ht key="chapter.actions.new">New Chapter</ht>
        </a>

        <page-nav param="top-page-nav"/>

        <collection param/>

        <page-nav param="bottom-page-nav"/>


      </section>
    </content:>
  </page>
</def>


<def tag="new-page" for="Chapter">
  <page merge title="#{ht 'chapter.new.title', :default=>[' New Chapter'] }">
    <body: class="new-page chapter" param/>

    <content: param>
      <section param="content-header">
        <h2 param="heading">
          <ht key="chapter.new.heading">
            New Chapter
          </ht>
        </h2>
      </section>

      <section param="content-body">
        <form param>
          <submit: label="#{ht 'chapter.actions.create', :default=>['Create Chapter']}"/>
        </form>
      </section>
    </content:>
  </page>
</def>


<def tag="show-page" for="Chapter">
  <page merge title="#{ht 'chapter.show.title', :default=>['Chapter'] }">

    <body: class="show-page chapter" param/>

    <content: param>
          <header param="content-header">
            <a:standard param="parent-link">&laquo; <ht key="chapter.actions.back_to_parent" parent="Standard" name="&this">Back to <name/></ht></a:standard>
            <h2 param="heading">
              <ht key="chapter.show.heading" name="&this.respond_to?(:name) ? this.name : ''">
                <name/>
              </ht>
            </h2>

            <record-flags fields="" param/>

            <a action="edit" if="&can_edit?" param="edit-link">
              <ht key="chapter.actions.edit" name="&this.respond_to?(:name) ? this.name : ''">
                Edit Chapter
              </ht>
            </a>
          </header>

          <section param="content-body">
            <field-list fields="name, overview" param/>
            <section param="collection-section">
              <h3 param="collection-heading">
                <ht key="area.collection.heading" count="&this.areas.count" >
                  <human-collection-name collection="areas" your/>
                </ht>
              </h3>

              <collection:areas param/>
            </section>
          </section>
    </content:>

  </page>
</def>


<def tag="edit-page" for="Chapter">
  <page merge title="#{ht 'chapter.edit.title', :default=>['Edit Chapter'] }">

    <body: class="edit-page chapter" param/>

    <content:>
      <section param="content-header">
        <h2 param="heading">
          <ht key="chapter.edit.heading" name="&this.respond_to?(:name) ? this.name : ''">
            Edit Chapter
          </ht>
        </h2>
        <delete-button label="#{ht 'chapter.actions.delete', :default=>['Remove This Chapter']}" param/>
      </section>

      <section param="content-body">
        <form param/>
      </section>
    </content:>

  </page>
</def>





<!-- ====== Finding Pages ====== -->

<def tag="index-page" for="Finding">
  <page merge title="#{ht 'finding.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page finding" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="finding.index.heading">
            <model-name-human model="&model"/>
          </ht>
        </h2>

        <p param="count" if>
          <ht key="finding.collection.count" count="&collection_count">
            <count summary/>
          </ht>
        </p>
      </header>

      <section param="content-body">
        <a action="new" to="&model" param="new-link">
          <ht key="finding.actions.new">New Finding</ht>
        </a>

        <page-nav param="top-page-nav"/>

        <collection param/>

        <page-nav param="bottom-page-nav"/>


      </section>
    </content:>
  </page>
</def>


<def tag="new-page" for="Finding">
  <page merge title="#{ht 'finding.new.title', :default=>[' New Finding'] }">
    <body: class="new-page finding" param/>

    <content: param>
      <section param="content-header">
        <h2 param="heading">
          <ht key="finding.new.heading">
            New Finding
          </ht>
        </h2>
      </section>

      <section param="content-body">
        <form param>
          <submit: label="#{ht 'finding.actions.create', :default=>['Create Finding']}"/>
        </form>
      </section>
    </content:>
  </page>
</def>


<def tag="show-page" for="Finding">
  <page merge title="#{ht 'finding.show.title', :default=>['Finding'] }">

    <body: class="show-page finding" param/>

    <content: param>
          <header param="content-header">
            <h2 param="heading">
              <ht key="finding.show.heading" name="&this.respond_to?(:name) ? this.name : ''">
                <name/>
              </ht>
            </h2>

            <record-flags fields="decision, concur, mark_complete" param/>

            <a:previewer param="creator-link"/>

            <a action="edit" if="&can_edit?" param="edit-link">
              <ht key="finding.actions.edit" name="&this.respond_to?(:name) ? this.name : ''">
                Edit Finding
              </ht>
            </a>
          </header>

          <section param="content-body">
            <field-list fields="rational, observation, recomendations, sec_obs, lifecycle_state, program, sreviewer" param/>
          </section>
    </content:>

  </page>
</def>


<def tag="edit-page" for="Finding">
  <page merge title="#{ht 'finding.edit.title', :default=>['Edit Finding'] }">

    <body: class="edit-page finding" param/>

    <content:>
      <section param="content-header">
        <h2 param="heading">
          <ht key="finding.edit.heading" name="&this.respond_to?(:name) ? this.name : ''">
            Edit Finding
          </ht>
        </h2>
        <delete-button label="#{ht 'finding.actions.delete', :default=>['Remove This Finding']}" param/>
      </section>

      <section param="content-body">
        <form param/>
      </section>
    </content:>

  </page>
</def>



<def tag="new-for-program-page" polymorphic/>
<def tag="new-for-program-page" for="Finding">
  <page merge title="#{ht 'finding.new_for_owner.title', :default=>['New Finding for']} #{name :with => @program}">
    <body: class="new-for-owner-page  finding" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="finding.new_for_owner.heading">
            New Finding
          </ht>
        </h2>
        <h3 param="subheading">
          <ht key="finding.new_for_owner.subheading">
            For:
          </ht>
          <a with="&@program"/>
        </h3>
      </header>

      <section param="content-body">
        <form owner="program" method="post" param>
          <field-list: skip="program"/>
          <submit: label="#{ht 'finding.actions.create', :default=>['Create Finding']}"/>
        </form>
      </section>
    </content:>
  </page>
</def>


<def tag="primary-read-page" polymorphic/>
<def tag="primary-read-page" for="Finding">

  <page title="#{ht 'finding.primary_read.title', :default=>['Primary Read']}" merge>

    <body: class="lifecycle-start-page primary-read-page" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="finding.primary_read.heading">
            Primary Read
          </ht>
        </h2>
      </header>

      <section param="content-body">
        <primary-read-form param="form"/>
      </section>
    </content:>

  </page>
</def>

<def tag="second-read-page" polymorphic/>
<def tag="second-read-page" for="Finding">
  <page title="#{ht 'finding.second_read.title', :default=>['Second Read']}" merge>

    <body: class="lifecycle-transition-page second-read-page" param/>

    <content:>
      <header param="content-header">
        <h2 param="heading">
          <ht key="finding.second_read.heading">
            Second Read
          </ht>
        </h2>
      </header>

      <section param="content-body">
        <second-read-form param="form"/>
      </section>
    </content:>

  </page>
</def>

<def tag="completion-page" polymorphic/>
<def tag="completion-page" for="Finding">
  <page title="#{ht 'finding.completion.title', :default=>['Completion']}" merge>

    <body: class="lifecycle-transition-page completion-page" param/>

    <content:>
      <header param="content-header">
        <h2 param="heading">
          <ht key="finding.completion.heading">
            Completion
          </ht>
        </h2>
      </header>

      <section param="content-body">
        <completion-form param="form"/>
      </section>
    </content:>

  </page>
</def>



<!-- ====== Program Pages ====== -->

<def tag="index-page" for="Program">
  <page merge title="#{ht 'program.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page program" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="program.index.heading">
            <model-name-human model="&model"/>
          </ht>
        </h2>

        <p param="count" if>
          <ht key="program.collection.count" count="&collection_count">
            <count summary/>
          </ht>
        </p>
      </header>

      <section param="content-body">
        <a action="new" to="&model" param="new-link">
          <ht key="program.actions.new">New Program</ht>
        </a>

        <page-nav param="top-page-nav"/>

        <collection param/>

        <page-nav param="bottom-page-nav"/>


      </section>
    </content:>
  </page>
</def>


<def tag="new-page" for="Program">
  <page merge title="#{ht 'program.new.title', :default=>[' New Program'] }">
    <body: class="new-page program" param/>

    <content: param>
      <section param="content-header">
        <h2 param="heading">
          <ht key="program.new.heading">
            New Program
          </ht>
        </h2>
      </section>

      <section param="content-body">
        <form param>
          <submit: label="#{ht 'program.actions.create', :default=>['Create Program']}"/>
        </form>
      </section>
    </content:>
  </page>
</def>


<def tag="show-page" for="Program">
  <page merge title="#{ht 'program.show.title', :default=>['Program'] }">

    <body: class="show-page program" param/>

    <content: param>
          <header param="content-header">
            <h2 param="heading">
              <ht key="program.show.heading" name="&this.respond_to?(:name) ? this.name : ''">
                <name/>
              </ht>
            </h2>

            <record-flags fields="" param/>

            <a action="edit" if="&can_edit?" param="edit-link">
              <ht key="program.actions.edit" name="&this.respond_to?(:name) ? this.name : ''">
                Edit Program
              </ht>
            </a>
          </header>

          <section param="content-body">
            <view:description param="description"/>
          </section>
    </content:>

  </page>
</def>


<def tag="edit-page" for="Program">
  <page merge title="#{ht 'program.edit.title', :default=>['Edit Program'] }">

    <body: class="edit-page program" param/>

    <content:>
      <section param="content-header">
        <h2 param="heading">
          <ht key="program.edit.heading" name="&this.respond_to?(:name) ? this.name : ''">
            Edit Program
          </ht>
        </h2>
        <delete-button label="#{ht 'program.actions.delete', :default=>['Remove This Program']}" param/>
      </section>

      <section param="content-body">
        <form param/>
      </section>
    </content:>

  </page>
</def>





<!-- ====== Standard Pages ====== -->

<def tag="index-page" for="Standard">
  <page merge title="#{ht 'standard.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page standard" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="standard.index.heading">
            <model-name-human model="&model"/>
          </ht>
        </h2>

        <p param="count" if>
          <ht key="standard.collection.count" count="&collection_count">
            <count summary/>
          </ht>
        </p>
      </header>

      <section param="content-body">
        <a action="new" to="&model" param="new-link">
          <ht key="standard.actions.new">New Standard</ht>
        </a>

        <page-nav param="top-page-nav"/>

        <collection param/>

        <page-nav param="bottom-page-nav"/>


      </section>
    </content:>
  </page>
</def>


<def tag="new-page" for="Standard">
  <page merge title="#{ht 'standard.new.title', :default=>[' New Standard'] }">
    <body: class="new-page standard" param/>

    <content: param>
      <section param="content-header">
        <h2 param="heading">
          <ht key="standard.new.heading">
            New Standard
          </ht>
        </h2>
      </section>

      <section param="content-body">
        <form param>
          <submit: label="#{ht 'standard.actions.create', :default=>['Create Standard']}"/>
        </form>
      </section>
    </content:>
  </page>
</def>


<def tag="show-page" for="Standard">
  <page merge title="#{ht 'standard.show.title', :default=>['Standard'] }">

    <body: class="show-page standard" param/>

    <content: param>
          <header param="content-header">
            <h2 param="heading">
              <ht key="standard.show.heading" name="&this.respond_to?(:name) ? this.name : ''">
                <name/>
              </ht>
            </h2>

            <record-flags fields="" param/>

            <a action="edit" if="&can_edit?" param="edit-link">
              <ht key="standard.actions.edit" name="&this.respond_to?(:name) ? this.name : ''">
                Edit Standard
              </ht>
            </a>
          </header>

          <section param="content-body">
            <field-list fields="program" param/>
            <section param="collection-section">
              <h3 param="collection-heading">
                <ht key="chapter.collection.heading" count="&this.chapters.count" >
                  <human-collection-name collection="chapters" your/>
                </ht>
              </h3>

              <collection:chapters param/>
            </section>
          </section>
    </content:>

  </page>
</def>


<def tag="edit-page" for="Standard">
  <page merge title="#{ht 'standard.edit.title', :default=>['Edit Standard'] }">

    <body: class="edit-page standard" param/>

    <content:>
      <section param="content-header">
        <h2 param="heading">
          <ht key="standard.edit.heading" name="&this.respond_to?(:name) ? this.name : ''">
            Edit Standard
          </ht>
        </h2>
        <delete-button label="#{ht 'standard.actions.delete', :default=>['Remove This Standard']}" param/>
      </section>

      <section param="content-body">
        <form param/>
      </section>
    </content:>

  </page>
</def>





<!-- ====== StdStatus Pages ====== -->

<def tag="index-page" for="StdStatus">
  <page merge title="#{ht 'std_status.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page std-status" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="std_status.index.heading">
            <model-name-human model="&model"/>
          </ht>
        </h2>

        <p param="count" if>
          <ht key="std_status.collection.count" count="&collection_count">
            <count summary/>
          </ht>
        </p>
      </header>

      <section param="content-body">
        <a action="new" to="&model" param="new-link">
          <ht key="std_status.actions.new">New Std status</ht>
        </a>

        <page-nav param="top-page-nav"/>

        <collection param/>

        <page-nav param="bottom-page-nav"/>


      </section>
    </content:>
  </page>
</def>


<def tag="new-page" for="StdStatus">
  <page merge title="#{ht 'std_status.new.title', :default=>[' New Std status'] }">
    <body: class="new-page std-status" param/>

    <content: param>
      <section param="content-header">
        <h2 param="heading">
          <ht key="std_status.new.heading">
            New Std status
          </ht>
        </h2>
      </section>

      <section param="content-body">
        <form param>
          <submit: label="#{ht 'std_status.actions.create', :default=>['Create Std status']}"/>
        </form>
      </section>
    </content:>
  </page>
</def>


<def tag="show-page" for="StdStatus">
  <page merge title="#{ht 'std_status.show.title', :default=>['Std status'] }">

    <body: class="show-page std-status" param/>

    <content: param>
          <header param="content-header">
            <h2 param="heading">
              <ht key="std_status.show.heading" name="&this.respond_to?(:name) ? this.name : ''">
                <name/>
              </ht>
            </h2>

            <record-flags fields="" param/>

            <a action="edit" if="&can_edit?" param="edit-link">
              <ht key="std_status.actions.edit" name="&this.respond_to?(:name) ? this.name : ''">
                Edit Std status
              </ht>
            </a>
          </header>

          <section param="content-body">
          </section>
    </content:>

  </page>
</def>


<def tag="edit-page" for="StdStatus">
  <page merge title="#{ht 'std_status.edit.title', :default=>['Edit Std status'] }">

    <body: class="edit-page std-status" param/>

    <content:>
      <section param="content-header">
        <h2 param="heading">
          <ht key="std_status.edit.heading" name="&this.respond_to?(:name) ? this.name : ''">
            Edit Std status
          </ht>
        </h2>
        <delete-button label="#{ht 'std_status.actions.delete', :default=>['Remove This Std status']}" param/>
      </section>

      <section param="content-body">
        <form param/>
      </section>
    </content:>

  </page>
</def>





<!-- ====== Upload Pages ====== -->

<def tag="index-page" for="Upload">
  <page merge title="#{ht 'upload.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page upload" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="upload.index.heading">
            <model-name-human model="&model"/>
          </ht>
        </h2>

        <p param="count" if>
          <ht key="upload.collection.count" count="&collection_count">
            <count summary/>
          </ht>
        </p>
      </header>

      <section param="content-body">
        <a action="new" to="&model" param="new-link">
          <ht key="upload.actions.new">New Upload</ht>
        </a>

        <page-nav param="top-page-nav"/>

        <collection param/>

        <page-nav param="bottom-page-nav"/>


      </section>
    </content:>
  </page>
</def>


<def tag="new-page" for="Upload">
  <page merge title="#{ht 'upload.new.title', :default=>[' New Upload'] }">
    <body: class="new-page upload" param/>

    <content: param>
      <section param="content-header">
        <h2 param="heading">
          <ht key="upload.new.heading">
            New Upload
          </ht>
        </h2>
      </section>

      <section param="content-body">
        <form param>
          <submit: label="#{ht 'upload.actions.create', :default=>['Create Upload']}"/>
        </form>
      </section>
    </content:>
  </page>
</def>


<def tag="show-page" for="Upload">
  <page merge title="#{ht 'upload.show.title', :default=>['Upload'] }">

    <body: class="show-page upload" param/>

    <content: param>
          <header param="content-header">
            <h2 param="heading">
              <ht key="upload.show.heading" name="&this.respond_to?(:name) ? this.name : ''">
                <name/>
              </ht>
            </h2>

            <record-flags fields="" param/>

            <a action="edit" if="&can_edit?" param="edit-link">
              <ht key="upload.actions.edit" name="&this.respond_to?(:name) ? this.name : ''">
                Edit Upload
              </ht>
            </a>
          </header>

          <section param="content-body">
            <field-list fields="proof_file_name, proof_content_type, proof_file_size, proof_updated_at, area" param/>
          </section>
    </content:>

  </page>
</def>


<def tag="edit-page" for="Upload">
  <page merge title="#{ht 'upload.edit.title', :default=>['Edit Upload'] }">

    <body: class="edit-page upload" param/>

    <content:>
      <section param="content-header">
        <h2 param="heading">
          <ht key="upload.edit.heading" name="&this.respond_to?(:name) ? this.name : ''">
            Edit Upload
          </ht>
        </h2>
        <delete-button label="#{ht 'upload.actions.delete', :default=>['Remove This Upload']}" param/>
      </section>

      <section param="content-body">
        <form param/>
      </section>
    </content:>

  </page>
</def>



<def tag="new-for-area-page" polymorphic/>
<def tag="new-for-area-page" for="Upload">
  <page merge title="#{ht 'upload.new_for_owner.title', :default=>['New Upload for']} #{name :with => @area}">
    <body: class="new-for-owner-page  upload" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="upload.new_for_owner.heading">
            New Upload
          </ht>
        </h2>
        <h3 param="subheading">
          <ht key="upload.new_for_owner.subheading">
            For:
          </ht>
          <a with="&@area"/>
        </h3>
      </header>

      <section param="content-body">
        <form owner="area" method="post" param>
          <field-list: skip="area"/>
          <submit: label="#{ht 'upload.actions.create', :default=>['Create Upload']}"/>
        </form>
      </section>
    </content:>
  </page>
</def>





<!-- ====== User Pages ====== -->

<def tag="index-page" for="User">
  <page merge title="#{ht 'user.index.title', :default=>[model.model_name.human(:count=>100)] }">
    <body: class="index-page user" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="user.index.heading">
            <model-name-human model="&model"/>
          </ht>
        </h2>

        <p param="count" if>
          <ht key="user.collection.count" count="&collection_count">
            <count summary/>
          </ht>
        </p>
      </header>

      <section param="content-body">

        <page-nav param="top-page-nav"/>

        <collection param/>

        <page-nav param="bottom-page-nav"/>


        <div param="new-form">
          <h3 param="new-form-heading">
            <ht key="user.form.new.heading">New User</ht>
          </h3>
          <form with="&@invalid_record || new_for_current_user(User)" param/>
        </div>

      </section>
    </content:>
  </page>
</def>


<def tag="new-page" for="User">
  <page merge title="#{ht 'user.new.title', :default=>[' New User'] }">
    <body: class="new-page user" param/>

    <content: param>
      <section param="content-header">
        <h2 param="heading">
          <ht key="user.new.heading">
            New User
          </ht>
        </h2>
      </section>

      <section param="content-body">
        <form param>
          <submit: label="#{ht 'user.actions.create', :default=>['Create User']}"/>
        </form>
      </section>
    </content:>
  </page>
</def>


<def tag="show-page" for="User">
  <page merge title="#{ht 'user.show.title', :default=>['User'] }">

    <body: class="show-page user" param/>

    <content: param>
          <header param="content-header">
            <h2 param="heading">
              <ht key="user.show.heading" name="&this.respond_to?(:name) ? this.name : ''">
                <name/>
              </ht>
            </h2>

            <record-flags fields="administrator" param/>

            <a action="edit" if="&can_edit?" param="edit-link">
              <ht key="user.actions.edit" name="&this.respond_to?(:name) ? this.name : ''">
                Edit User
              </ht>
            </a>
          </header>

          <section param="content-body">
            <field-list fields="email_address, state" param/>
          </section>
    </content:>

  </page>
</def>


<def tag="edit-page" for="User">
  <page merge title="#{ht 'user.edit.title', :default=>['Edit User'] }">

    <body: class="edit-page user" param/>

    <content:>
      <section param="content-header">
        <h2 param="heading">
          <ht key="user.edit.heading" name="&this.respond_to?(:name) ? this.name : ''">
            Edit User
          </ht>
        </h2>
        <delete-button label="#{ht 'user.actions.delete', :default=>['Remove This User']}" param/>
      </section>

      <section param="content-body">
        <form param/>
      </section>
    </content:>

  </page>
</def>


<def tag="invite-page" polymorphic/>
<def tag="invite-page" for="User">

  <page title="#{ht 'user.invite.title', :default=>['Invite']}" merge>

    <body: class="lifecycle-start-page invite-page" param/>

    <content: param>
      <header param="content-header">
        <h2 param="heading">
          <ht key="user.invite.heading">
            Invite
          </ht>
        </h2>
      </header>

      <section param="content-body">
        <invite-form param="form"/>
      </section>
    </content:>

  </page>
</def>

<def tag="accept-invitation-page" polymorphic/>
<def tag="accept-invitation-page" for="User">
  <page title="#{ht 'user.accept_invitation.title', :default=>['Accept Invitation']}" merge>

    <body: class="lifecycle-transition-page accept-invitation-page" param/>

    <content:>
      <header param="content-header">
        <h2 param="heading">
          <ht key="user.accept_invitation.heading">
            Accept Invitation
          </ht>
        </h2>
      </header>

      <section param="content-body">
        <accept-invitation-form param="form"/>
      </section>
    </content:>

  </page>
</def>

<def tag="reset-password-page" polymorphic/>
<def tag="reset-password-page" for="User">
  <page title="#{ht 'user.reset_password.title', :default=>['Reset Password']}" merge>

    <body: class="lifecycle-transition-page reset-password-page" param/>

    <content:>
      <header param="content-header">
        <h2 param="heading">
          <ht key="user.reset_password.heading">
            Reset Password
          </ht>
        </h2>
      </header>

      <section param="content-body">
        <reset-password-form param="form"/>
      </section>
    </content:>

  </page>
</def>


